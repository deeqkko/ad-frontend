[{"/home/deeq/github/adsite.com/ad-frontend/src/index.js":"1","/home/deeq/github/adsite.com/ad-frontend/src/App.js":"2","/home/deeq/github/adsite.com/ad-frontend/src/reportWebVitals.js":"3","/home/deeq/github/adsite.com/ad-frontend/src/components/LoginForm.js":"4","/home/deeq/github/adsite.com/ad-frontend/src/services/login.js":"5","/home/deeq/github/adsite.com/ad-frontend/src/components/Domains.js":"6","/home/deeq/github/adsite.com/ad-frontend/src/helpers/authHeader.js":"7","/home/deeq/github/adsite.com/ad-frontend/src/components/DomainForm.js":"8","/home/deeq/github/adsite.com/ad-frontend/src/pages/mainpage.jsx":"9","/home/deeq/github/adsite.com/ad-frontend/src/pages/domainpage.jsx":"10","/home/deeq/github/adsite.com/ad-frontend/src/pages/userpage.jsx":"11","/home/deeq/github/adsite.com/ad-frontend/src/components/Users.js":"12","/home/deeq/github/adsite.com/ad-frontend/src/components/UserForm.js":"13","/home/deeq/github/adsite.com/ad-frontend/src/pages/oupage.jsx":"14","/home/deeq/github/adsite.com/ad-frontend/src/components/Ou.js":"15","/home/deeq/github/adsite.com/ad-frontend/src/components/OuForm.js":"16","/home/deeq/github/adsite.com/ad-frontend/src/pages/grouppage.jsx":"17","/home/deeq/github/adsite.com/ad-frontend/src/components/Groups.js":"18","/home/deeq/github/adsite.com/ad-frontend/src/components/GroupForm.js":"19","/home/deeq/github/adsite.com/ad-frontend/src/services/backendapi.js":"20","/home/deeq/github/adsite.com/ad-frontend/src/components/UpdateForm.js":"21"},{"size":482,"mtime":1611153416172,"results":"22","hashOfConfig":"23"},{"size":708,"mtime":1611409309826,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1610641548373,"results":"25","hashOfConfig":"26"},{"size":1536,"mtime":1611473264645,"results":"27","hashOfConfig":"23"},{"size":209,"mtime":1615032474185,"results":"28","hashOfConfig":"23"},{"size":1133,"mtime":1612018846643,"results":"29","hashOfConfig":"23"},{"size":539,"mtime":1615035289248,"results":"30","hashOfConfig":"23"},{"size":3507,"mtime":1612019239228,"results":"31","hashOfConfig":"23"},{"size":2655,"mtime":1615035607405,"results":"32","hashOfConfig":"23"},{"size":2796,"mtime":1615040263758,"results":"33","hashOfConfig":"23"},{"size":2985,"mtime":1615040410838,"results":"34","hashOfConfig":"23"},{"size":1602,"mtime":1612099219110,"results":"35","hashOfConfig":"23"},{"size":5095,"mtime":1612099116624,"results":"36","hashOfConfig":"23"},{"size":2137,"mtime":1615040382622,"results":"37","hashOfConfig":"23"},{"size":773,"mtime":1612019877845,"results":"38","hashOfConfig":"23"},{"size":1449,"mtime":1615045294966,"results":"39","hashOfConfig":"23"},{"size":3486,"mtime":1615040358406,"results":"40","hashOfConfig":"23"},{"size":1343,"mtime":1612098702963,"results":"41","hashOfConfig":"23"},{"size":5435,"mtime":1615172484723,"results":"42","hashOfConfig":"23"},{"size":2728,"mtime":1615041094659,"results":"43","hashOfConfig":"23"},{"size":3564,"mtime":1612110146362,"results":"44","hashOfConfig":"23"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"1my6n77",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1xsxxfn",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"47"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"47"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"47"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"47"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},"/home/deeq/github/adsite.com/ad-frontend/src/index.js",[],["96","97"],"/home/deeq/github/adsite.com/ad-frontend/src/App.js",[],"/home/deeq/github/adsite.com/ad-frontend/src/reportWebVitals.js",[],["98","99"],"/home/deeq/github/adsite.com/ad-frontend/src/components/LoginForm.js",[],"/home/deeq/github/adsite.com/ad-frontend/src/services/login.js",[],"/home/deeq/github/adsite.com/ad-frontend/src/components/Domains.js",[],"/home/deeq/github/adsite.com/ad-frontend/src/helpers/authHeader.js",[],"/home/deeq/github/adsite.com/ad-frontend/src/components/DomainForm.js",[],"/home/deeq/github/adsite.com/ad-frontend/src/pages/mainpage.jsx",["100"],"import React, { useState, useEffect, useRef } from 'react'\nimport LoginForm from '../components/LoginForm'\nimport { login } from '../services/login'\nimport { assignTokens, removeTokens } from '../helpers/authHeader'\n\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport {Container, Row, Col}  from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\n\nconst MainPage = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [tokens, setTokens] = useState({})\n\n  const [loggedIn, setloggedIn] = useState(false)\n\n  const loginFormRef = useRef()\n\n  useEffect(() => {\n    const loggedTokensJSON = window.localStorage.getItem('tokens')\n    if (loggedTokensJSON) {\n      const loggedTokens = JSON.parse(loggedTokensJSON)\n      setTokens(loggedTokens)\n      setloggedIn(true)\n      loginFormRef.current.toggleVisible()\n    }\n\n  }, [ ])\n\n  const handleLogin = async (event) => {\n    event.preventDefault() \n    try {\n      const usertokens = await login({ username, password })\n      console.log('From app.js ',usertokens)\n      assignTokens(usertokens)\n      setTokens(usertokens)\n      setUsername('')\n      setPassword('')\n      window.localStorage.setItem('tokens', JSON.stringify(usertokens))\n      setloggedIn(true)\n      loginFormRef.current.toggleVisible()   \n    }\n    catch (exception) {\n      console.log(exception)\n      setUsername('')\n      setPassword('')\n    }\n  }\n\n  const logOut = () => {\n    setTokens({})\n    setloggedIn(false)\n    window.localStorage.removeItem('tokens')\n    loginFormRef.current.toggleVisible()\n    removeTokens()\n  }\n\n\n  return(\n\n  <div>\n    <Container fluid=\"xl\">\n    <Jumbotron>\n    <Row className=\"justify-content-md-center\">\n    <Col> \n      {loggedIn ? <h1>Adusermizer Logged</h1> : <h1>Adusermizer</h1>}\n      </Col>\n      </Row>\n      <Row>\n    <Col>\n      <LoginForm ref={loginFormRef}\n        username={username}\n        password={password}\n        setUsername={({ target }) => setUsername(target.value)}\n        setPassword={({ target }) => setPassword(target.value)} \n        handleLogin={handleLogin}\n        handleLogout={logOut}\n        />\n        </Col>\n        </Row>\n        </Jumbotron>\n    </Container>\n    {loggedIn && \n        <div>\n          <Container>\n            <Row>\n              <Col><Link to=\"/domains\">Domains</Link></Col>\n              <Col><Link to=\"/users\">Users</Link></Col>\n              <Col><Link to=\"/ou\">Organizational Units</Link></Col>\n              <Col><Link to=\"/groups\">Groups</Link></Col>\n            </Row>\n          </Container>\n            \n        </div>\n    }\n    \n  </div>\n  )\n}\n\nexport default MainPage;\n","/home/deeq/github/adsite.com/ad-frontend/src/pages/domainpage.jsx",[],"/home/deeq/github/adsite.com/ad-frontend/src/pages/userpage.jsx",[],"/home/deeq/github/adsite.com/ad-frontend/src/components/Users.js",[],"/home/deeq/github/adsite.com/ad-frontend/src/components/UserForm.js",["101"],"import React, { useState, useEffect } from 'react'\nimport { create } from '../services/backendapi'\nimport { Container, Form, Button } from 'react-bootstrap'\n\nimport { get } from '../services/backendapi'\nimport { assignTokens } from '../helpers/authHeader'\n\nconst groupUrl = process.env.REACT_APP_GROUP_URL\nconst ouUrl = process.env.REACT_APP_OU_URL\n\nconst UserForm = (props) => {\n\n    const newUserTemplate = {\n        sam_account_name:'',\n        given_name:'',\n        surname:'',\n        account_password:'',\n        organizational_unit:'',\n        groups:[]\n    }\n\n\n    const [ newUser, setNewUser ] = useState(newUserTemplate)\n    const [ groups, setGroups] = useState([])\n    const [ ous, setOus] = useState([])\n\n    const handleCreateEntryChange = (event) => {\n        const value = event.target.value\n        setNewUser({\n            ...newUser,\n            [event.target.name]: value\n            })\n        }\n\n\n    const handleArrayChange = (event) => {\n        const value = event.target.value\n        if (value === '') {\n            setNewUser({\n                ...newUser, groups: []\n            })\n            \n        } else {\n            setNewUser({\n                ...newUser, groups: Array.from(event.target.selectedOptions, (item) => item.value)\n            })\n            \n        }\n    }\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault()\n        const response = await create(props.url, newUser)\n        console.log(response)\n        setNewUser(newUserTemplate)\n    }\n\n    useEffect(() => {\n        assignTokens(props.tokens)\n        get(ouUrl).then(ous => setOus(ous))\n        get(groupUrl).then(groups => setGroups(groups))\n\n    }, [])\n    \n\n    return(\n        <div>\n            <Container>\n                <Form onSubmit={handleFormSubmit}>\n                    <Form.Group>\n                        <Form.Label>Account Name</Form.Label>\n                        <Form.Control size=\"sm\"\n                            id='sam_account_name'\n                            type='text'\n                            value={newUser.sam_account_name}\n                            name='sam_account_name'\n                            onChange={handleCreateEntryChange}\n                            placeholder=\"User account name\" />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>First Name</Form.Label>\n                        <Form.Control size=\"sm\"\n                            id='given_name'\n                            type='text'\n                            value={newUser.given_name}\n                            name='given_name'\n                            onChange={handleCreateEntryChange}\n                            placeholder=\"Users first name\" />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Last Name</Form.Label>\n                        <Form.Control size=\"sm\"\n                            id='surname'\n                            type='text'\n                            value={newUser.surname}\n                            name='surname'\n                            onChange={handleCreateEntryChange}\n                            placeholder=\"Users last name\" />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control size=\"sm\"\n                            id='account_password'\n                            type='password'\n                            value={newUser.account_password}\n                            name='account_password'\n                            onChange={handleCreateEntryChange}\n                            placeholder=\"Users password (Will be prompted to change on first login)\" />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Organizational Unit</Form.Label>\n                        <Form.Control as=\"select\"\n                            id='organizational_unit'\n                            name='organizational_unit'\n                            onChange={handleCreateEntryChange}>\n                            <option id='none' value=''>None</option>\n                            {ous.map(ou => \n                            <option key={ou.id} value={ou.id}>{ou.name}</option>)}\n                        </Form.Control>\n                        <Form.Label>Groups</Form.Label>\n                        <Form.Control as=\"select\" multiple\n                            id='groups'\n                            name='groups'\n                            onChange={handleArrayChange}>\n                            <option id='none' value={[]}>None</option>\n                            {groups.map(group =>\n                            <option key={group.id} value={group.id}>{group.name}</option>)}\n                        </Form.Control>\n                    </Form.Group>\n                    <Button variant=\"primary\" id=\"submit\" type=\"submit\">Create</Button>\n                </Form>\n            </Container>\n        </div>\n    )\n\n}\n\n\nexport default UserForm","/home/deeq/github/adsite.com/ad-frontend/src/pages/oupage.jsx",["102"],"import React, { useState, useEffect } from 'react'\n\n//Routers\nimport { Link } from 'react-router-dom'\n\n//Bootstrap\nimport { Container, Row, Col, Jumbotron } from 'react-bootstrap'\n\n//JSX Components\nimport Ous from '../components/Ou'\nimport OuForm from '../components/OuForm'\n\n//Helpers\nimport { assignTokens } from '../helpers/authHeader'\n\n//Services\nimport { get } from '../services/backendapi'\n\n//URL\nconst ouUrl = process.env.REACT_APP_OU_URL\n\nconst OuPage = () => {\n    const [loggedIn, setloggedIn] = useState(false)\n    const [tokens, setTokens] = useState({})\n    const [ous, setOus] = useState([])\n    \n    useEffect(() => {\n        const loggedTokensJSON = window.localStorage.getItem('tokens')\n        if (loggedTokensJSON) {\n          const loggedTokens = JSON.parse(loggedTokensJSON)\n          setTokens(loggedTokens)\n          setloggedIn(true)\n        }\n    \n      }, [ ])\n\n      useEffect(() => {\n        if (tokens.access) {\n          assignTokens(tokens)\n          get(ouUrl)\n            .then(ous => setOus(ous))\n            .catch(error => setOus([]))\n        }\n        console.log(ous)\n      }, [ tokens ])\n\n      return(\n        <div>\n        <Container fluid=\"xl\">\n            <Jumbotron>\n                <Row className=\"justify-content-md-center\">\n                    <Col>\n                        <h2>Organizational Units</h2>\n                    </Col>\n                </Row>\n                <Row>\n                    <Link to='/'>Main</Link>\n                </Row>\n            </Jumbotron>\n        </Container>\n        <Container fluid=\"xl\">\n                <Row>\n                    <Col>\n                        {loggedIn && ous\n                            .map(ou => \n                                <Ous key={ou.id}\n                                      id={ou.id}\n                                      name={ou.name}\n                                      url={ouUrl} \n                                        />)}\n                    </Col>\n                    <Col>{loggedIn && <OuForm url={ouUrl}/>}</Col>\n                    </Row>\n            </Container>\n        </div>\n      )\n}\n\nexport default OuPage","/home/deeq/github/adsite.com/ad-frontend/src/components/Ou.js",[],"/home/deeq/github/adsite.com/ad-frontend/src/components/OuForm.js",[],"/home/deeq/github/adsite.com/ad-frontend/src/pages/grouppage.jsx",[],"/home/deeq/github/adsite.com/ad-frontend/src/components/Groups.js",[],"/home/deeq/github/adsite.com/ad-frontend/src/components/GroupForm.js",["103"],"import React, { useState, useEffect } from 'react'\nimport { Container, Form, Button } from 'react-bootstrap'\n\nimport { get, create } from '../services/backendapi'\nimport { assignTokens } from '../helpers/authHeader'\n\nconst ouUrl = process.env.REACT_APP_OU_URL\n\nconst GroupForm = (props) => {\n    \n    const newGroupTemplate = {\n        name:'',\n        sam_account_name:'',\n        group_category: 0,\n        group_scope: 0,\n        display_name:'',\n        description:'',\n        organizational_unit:''\n    }\n\n    const [ newGroup, setNewGroup ] = useState(newGroupTemplate)\n    const [ ous, setOus ] = useState([])\n\n\n\n    const handleCreateEntryChange = (event) => {\n        const value = event.target.value\n        setNewGroup({\n            ...newGroup,\n            [event.target.name]: value\n        })\n    }\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault()\n        const response = await create(props.url, newGroup)\n        console.log(response)\n        setNewGroup(newGroupTemplate)\n    }\n\n    useEffect(() => {\n        assignTokens(props.tokens)\n        get(ouUrl).then(ous => setOus(ous))\n    }, [])\n\n    return(\n        <div>\n            <Container>\n                <Form onSubmit={handleFormSubmit}>\n                    <Form.Group>\n                        <Form.Label>Group Name</Form.Label>\n                        <Form.Control size=\"sm\"\n                            id='name'\n                            type='text'\n                            value={newGroup.name}\n                            name='name'\n                            onChange={handleCreateEntryChange}\n                            placeholder='Group name' />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>sAMAccount Name</Form.Label>\n                        <Form.Control size=\"sm\"\n                            id='sam_account_name'\n                            type='text'\n                            value={newGroup.sam_account_name}\n                            name='sam_account_name'\n                            onChange={handleCreateEntryChange}\n                            placeholder='sAMAccount name' />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Group Category</Form.Label>\n                        <Form.Control as='select'\n                            size=\"sm\"\n                            id='group_category'\n                            value={newGroup.group_category}\n                            name='group_category' \n                            onChange={handleCreateEntryChange}>\n                            <option value={parseInt(0)}>Distribution</option>\n                            <option value={parseInt(1)}>Security</option>     \n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Group Scope</Form.Label>\n                        <Form.Control as='select'\n                            size=\"sm\"\n                            id='group_scope'\n                            value={newGroup.group_scope}\n                            name='group_scope'\n                            onChange={handleCreateEntryChange}>\n                            <option value={parseInt(0)}>DomainLocal</option>\n                            <option value={parseInt(1)}>Global</option>\n                            <option value={parseInt(2)}>Universal</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Display Name</Form.Label>\n                        <Form.Control size=\"sm\"\n                            id='display_name'\n                            type='text'\n                            value={newGroup.display_name}\n                            name='display_name'\n                            onChange={handleCreateEntryChange}\n                            placeholder='Group display name' />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control size=\"sm\"\n                            id='description'\n                            type='text'\n                            value={newGroup.description}\n                            name='description'\n                            onChange={handleCreateEntryChange}\n                            placeholder='Group Description' />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Organizational Unit</Form.Label>\n                        <Form.Control as='select'\n                            size='sm'\n                            id='organizational_unit'\n                            value={newGroup.organizational_unit}\n                            name='organizational_unit'\n                            onChange={handleCreateEntryChange}>\n                            <option id='none' value=''>None</option>\n                            {ous.map(ou => \n                                <option key={ou.id} value={ou.id}>{ou.name}</option>)}\n                            </Form.Control>\n                    </Form.Group>\n                    <Button variant='primary' id='submit' type='submit' name='create'>Create</Button>\n                </Form>\n            </Container>\n        </div>\n    )\n}\n\nexport default GroupForm","/home/deeq/github/adsite.com/ad-frontend/src/services/backendapi.js",["104","105","106","107"],"import axios from 'axios'\nimport { getAccessToken, getRefreshToken } from '../helpers/authHeader'\nimport createAuthRefreshInterceptor from 'axios-auth-refresh'\n\nlet authorization = null\nlet refresh = null\n\nconst refreshUrl = 'http://localhost:8000/api/token/refresh/'\n\n\n// const refreshAuthLogic = (failedRequest) => {\n//     axios.post(refreshUrl, refresh.body).then(response => {\n//         console.log(response.data)\n//         failedRequest.response.config.headers['Authorization'] = 'Bearer ' + response.data.access\n//         console.log(failedRequest.response.config.headers)\n//         return Promise.resolve()\n//     })}\n\n\nexport const get = async (url) => {\n    authorization = getAccessToken()\n    // refresh = getRefreshToken()\n    // createAuthRefreshInterceptor(axios, refreshAuthLogic, { pauseInstanceWhileRefreshing: true })\n    const response = await axios.get(url, authorization)\n    return response.data\n}\n\nexport const create = async (url, newObject) => {\n    authorization = getAccessToken()\n    const response = await axios.post(url, newObject, authorization)\n        .then((response) => {\n            if (newObject.organizational_unit) {\n                console.log('ou', response)\n                updateOu(url, response.data.id, newObject.organizational_unit)\n                return response\n            }\n            if (newObject.groups) {\n                console.log('groups', response)\n                updateGroups(url, response.data.id, newObject.groups)\n                return response\n            }\n            return response\n        })\n    return response.data\n}\n\nexport const destroy = async (url, id) => {\n    authorization = getAccessToken()\n    const response = await axios.delete(`${url}${id}/`, authorization)\n    console.log(response.data)\n    return response.data\n}\n\nexport const updateGroups = async (url, id, groupId) => {\n    authorization = getAccessToken()\n    const data = { groups: groupId }\n    const response = await axios.post(`${url}${id}/add_to_group/`, data, authorization)\n    console.log('updateGroup', response.data)\n    return response.data\n}\n\nexport const updateOu = async (url, id, ouId) => {\n    authorization = getAccessToken()\n    const data = { organizational_unit: ouId}\n    const response = await axios.post(`${url}${id}/add_to_ou/`, data, authorization)\n    console.log('updateOu', response.data)\n    return response.data\n}\n\nexport const removeAllGroups = async (url, id, groupIds) => {\n    authorization = getAccessToken()\n    console.log(groupIds)\n    const data = { groups: groupIds }\n    console.log(data)\n    const response = await axios.post(`${url}${id}/remove_from_group/`, data, authorization)\n    console.log(response.data)\n    return response.data\n}\n","/home/deeq/github/adsite.com/ad-frontend/src/components/UpdateForm.js",["108"],"import React, { useState, useEffect } from 'react'\nimport { Container, Form, Button } from 'react-bootstrap'\nimport { assignTokens } from '../helpers/authHeader'\nimport { get, updateGroups, updateOu, \n         removeAllGroups} from '../services/backendapi'\n\nconst groupUrl = process.env.REACT_APP_GROUP_URL\nconst ouUrl = process.env.REACT_APP_OU_URL\n\nconst UpdateForm = (props) => {\n\n\n    const [ groups, setGroups ] = useState([])\n    const [ ous, setOus ] = useState([]) \n    const [ ouUpdate, setOuUpdate ] = useState(null)\n    const [ groupUpdate, setGroupUpdate ] = useState(null)\n    const [ currentGroups, setCurrentGroups] = useState(props.currentGroups)\n\n\n    const handleOuEntryChange = (event) => {\n        const value = event.target.value\n        setOuUpdate(value)\n    }\n\n    const handleGroupArrayChange = (event) => {\n        const selection = Array.from(event.target.selectedOptions, (item) => item.value)\n        setCurrentGroups(selection)\n        setGroupUpdate(selection)\n        console.log('handleGroupArrayChange', groupUpdate)\n    }\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault()\n        let response = null\n        console.log('groupsUpdate',(groupUpdate), 'ouUpdate', (ouUpdate))\n\n        if (groupUpdate) {\n            response = await updateGroups(props.url, props.id, groupUpdate)\n            setGroupUpdate([])\n        }\n        if (ouUpdate) {\n            response = await updateOu(props.url, props.id, ouUpdate)\n            setOuUpdate('')\n        }   \n        return response\n    }\n\n    const handleGroupRemoval = async (event) => {\n        event.preventDefault()\n        let groups = props.currentGroups\n        const response = await removeAllGroups(props.url, props.id, groups)\n        setCurrentGroups([])\n        setGroupUpdate([])\n        return response\n    }\n\n    useEffect(() => {\n        assignTokens(props.tokens)\n        get(ouUrl).then(ous => setOus(ous))\n        get(groupUrl).then(groups => setGroups(groups))\n\n    }, [])\n\n\n    \n\n    return(\n        <div>\n            <Container>\n                <Form onSubmit={handleFormSubmit}>\n                    <Form.Group>\n                        <Form.Label>Organizational Unit</Form.Label>\n                        <Form.Control as=\"select\"\n                            name='organizational_unit'\n                            onChange={handleOuEntryChange}>\n                            <option value=''>None</option>\n                            {ous.map(ou => \n                            <option key={ou.id} value={ou.id}>{ou.name}</option>)}\n                        </Form.Control>\n                        <Form.Label>Groups</Form.Label>\n                        <Form.Control as=\"select\" multiple\n                            value={currentGroups}\n                            name='groups'\n                            onChange={handleGroupArrayChange}>\n                            {groups.map(group =>\n                            <option key={group.id} \n                                    value={group.id}>\n                                    {group.name}\n                                    </option>)}\n                        </Form.Control>\n                    </Form.Group>\n                    <Button variant='primary' id={props.id} type='submit'>Update</Button>\n                    <Button variant='danger' \n                        id='remove_from_groups'\n                        onClick={handleGroupRemoval}>Remove from groups</Button>\n                </Form>\n            </Container>\n        </div>\n    )\n}\n\nexport default UpdateForm",["109","110"],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"111","replacedBy":"115"},{"ruleId":"113","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":14,"column":10,"nodeType":"119","messageId":"120","endLine":14,"endColumn":16},{"ruleId":"121","severity":1,"message":"122","line":63,"column":8,"nodeType":"123","endLine":63,"endColumn":10,"suggestions":"124"},{"ruleId":"121","severity":1,"message":"125","line":45,"column":10,"nodeType":"123","endLine":45,"endColumn":20,"suggestions":"126"},{"ruleId":"121","severity":1,"message":"122","line":44,"column":8,"nodeType":"123","endLine":44,"endColumn":10,"suggestions":"127"},{"ruleId":"117","severity":1,"message":"128","line":2,"column":26,"nodeType":"119","messageId":"120","endLine":2,"endColumn":41},{"ruleId":"117","severity":1,"message":"129","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":36},{"ruleId":"117","severity":1,"message":"130","line":6,"column":5,"nodeType":"119","messageId":"120","endLine":6,"endColumn":12},{"ruleId":"117","severity":1,"message":"131","line":8,"column":7,"nodeType":"119","messageId":"120","endLine":8,"endColumn":17},{"ruleId":"121","severity":1,"message":"122","line":62,"column":8,"nodeType":"123","endLine":62,"endColumn":10,"suggestions":"132"},{"ruleId":"111","replacedBy":"133"},{"ruleId":"113","replacedBy":"134"},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],["135"],["136"],"no-unused-vars","'tokens' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.tokens'. Either include it or remove the dependency array.","ArrayExpression",["137"],"React Hook useEffect has a missing dependency: 'ous'. Either include it or remove the dependency array.",["138"],["139"],"'getRefreshToken' is defined but never used.","'createAuthRefreshInterceptor' is defined but never used.","'refresh' is assigned a value but never used.","'refreshUrl' is assigned a value but never used.",["140"],["135"],["136"],"no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"141","fix":"145"},{"desc":"141","fix":"146"},"Update the dependencies array to be: [props.tokens]",{"range":"147","text":"148"},"Update the dependencies array to be: [ous, tokens]",{"range":"149","text":"150"},{"range":"151","text":"148"},{"range":"152","text":"148"},[1685,1687],"[props.tokens]",[1115,1125],"[ous, tokens]",[1136,1138],[1999,2001]]